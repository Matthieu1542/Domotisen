/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/alarme_screen/AlarmeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

AlarmeViewBase::AlarmeViewBase() :
    flexButtonCallback(this, &AlarmeViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &AlarmeViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    add(image1);

    RetourHome.setBitmaps(Bitmap(BITMAP_HOME_ID), Bitmap(BITMAP_HOME_ID));
    RetourHome.setBitmapXY(0, 0);
    RetourHome.setAction(flexButtonCallback);
    RetourHome.setPosition(180, 76, 120, 120);
    add(RetourHome);

    boutonAlarme.setXY(120, 210);
    boutonAlarme.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    boutonAlarme.setLabelText(touchgfx::TypedText(T_ALARME_DESACTIVER));
    boutonAlarme.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boutonAlarme.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boutonAlarme.setAction(buttonCallback);
    add(boutonAlarme);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
    scalableImage1.setPosition(40, 88, 80, 80);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    scalableImage1_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
    scalableImage1_1.setPosition(360, 96, 80, 80);
    scalableImage1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1_1);

    Porte_1.setXY(12, 42);
    Porte_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Porte_1.setLinespacing(0);
    Porte_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UZ1Q));
    add(Porte_1);

    Porte_2.setXY(332, 42);
    Porte_2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Porte_2.setLinespacing(0);
    Porte_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R1CR));
    add(Porte_2);

    YES.setXY(47, 116);
    YES.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    YES.setLinespacing(0);
    YES.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9ZXP));
    YES.setVisible(false);
    add(YES);

    NO.setXY(56, 116);
    NO.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    NO.setLinespacing(0);
    NO.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FNY3));
    NO.setVisible(false);
    add(NO);

    Distance.setPosition(360, 116, 80, 80);
    Distance.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Distance.setLinespacing(0);
    Unicode::snprintf(DistanceBuffer, DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_N4U6).getText());
    Distance.setWildcard(DistanceBuffer);
    Distance.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PXJC));
    add(Distance);
}

AlarmeViewBase::~AlarmeViewBase()
{

}

void AlarmeViewBase::setupScreen()
{

}

void AlarmeViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &RetourHome)
    {
        //Interaction1
        //When RetourHome clicked change screen to Main
        //Go to Main with screen transition towards East
        application().gotoMainScreenCoverTransitionEast();
    }
}

void AlarmeViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &boutonAlarme)
    {
        //BoutonAlarmeCliquer
        //When boutonAlarme clicked call virtual function
        //Call BoutonAlarmeCliquer
        BoutonAlarmeCliquer();
    }
}
