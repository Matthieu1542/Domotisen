/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ALARMEVIEWBASE_HPP
#define ALARMEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/alarme_screen/AlarmePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class AlarmeViewBase : public touchgfx::View<AlarmePresenter>
{
public:
    AlarmeViewBase();
    virtual ~AlarmeViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void BoutonAlarmeCliquer()
    {
        // Override and implement this function in Alarme
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  RetourHome;
    touchgfx::ButtonWithLabel boutonAlarme;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::ScalableImage scalableImage1_1;
    touchgfx::TextArea Porte_1;
    touchgfx::TextArea Porte_2;
    touchgfx::TextArea YES;
    touchgfx::TextArea NO;
    touchgfx::TextAreaWithOneWildcard Distance;

    /*
     * Wildcard Buffers
     */
    static const uint16_t DISTANCE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar DistanceBuffer[DISTANCE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<AlarmeViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<AlarmeViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // ALARMEVIEWBASE_HPP
